import pandas as pd
import numpy as np
import os


def PCA15v(input_data):

    PCA15v_dict = {
        'A': [-0.109,14.096,-0.981,-1.448,1.598,5.022,-0.790,-4.075,-0.169,0.412,1.641,0.727,2.387,2.149,-5.544],  # A
        'C': [7.488,9.426,7.910,2.065,10.471,-3.143,-1.730,-7.114,-6.224,3.137,-0.361,-3.249,1.690,-3.641,2.069],# C
        'D': [-17.324,-1.430,15.354,-4.165,-5.015,-2.923,5.662,-3.166,-3.231,-3.421,0.165,3.704,-2.408,0.526,1.421],  # D
        'E': [-15.066,-4.501,9.783,-6.362,-6.545,1.031,-0.672,-2.464,5.320,1.449,-3.087,-5.365,2.214,1.469,-1.751],  # E
        'F': [19.031,-6.672,1.480,5.019,1.670,-2.295,6.600,1.709,-0.589,5.449,0.644,2.152,-0.897,7.597,-0.316],  # F
        'G': [-8.346,21.891,-0.612,2.278,4.038,8.933,4.580,4.884,1.709,-2.084,1.089,-4.404,-5.545,0.535,0.269],  # G
        'H': [-3.179,-7.683,4.608,-0.155,5.718,-1.454,-4.876,1.081,7.889,-1.609,10.718,3.034,0.567,-0.581,0.659],  # H
        'I': [18.731,4.437,-4.697,-6.397,-4.780,-6.685,-0.405,1.001,-3.063,-3.056,2.448,-1.592,0.732,-1.537,-5.344],  # I
        'K': [-12.122,-9.138,-9.006,-5.261,-6.249,7.518,-1.203,-1.147,-5.888,8.054,4.423,1.692,-1.617,-2.271,1.146],  # K
        'L': [16.820,5.138,-4.489,-8.305,-2.835,0.482,0.140,0.374,1.951,0.031,-0.876,-2.135,3.908,3.140,5.770],  # L
        'M': [12.809,0.674,0.992,-2.032,2.304,1.719,-7.024,-5.667,2.801,2.571,-4.830,4.383,-5.853,0.982,-0.755],  # M
        'N': [-13.180,0.007,2.349,-0.362,2.911,-6.377,-3.177,9.422,-6.477,1.458,1.319,-1.640,-0.190,2.101,-0.270],  # N
        'P': [-4.236,7.472,-5.382,14.575,-10.007,-4.185,-6.275,-4.278,-0.580,-3.658,1.453,-1.929,-1.778,1.672,1.947],# P
        'Q': [-12.080,-5.753,-2.629,-0.344,2.962,-3.099,-6.706,6.242,3.031,2.978,-6.456,-0.830,-0.386,-0.812,-0.423],  # Q
        'R': [-14.669,-20.296,-13.248,-2.276,8.139,-1.148,4.125,-5.913,-0.850,-6.440,-1.295,-2.179,-0.612,1.793,-0.133],  # R
        'S': [-10.490,8.987,-2.722,4.950,0.781,2.862,1.388,-0.127,1.384,1.000,-1.051,2.995,8.169,-0.429,0.598],  # S
        'T': [-6.039,6.083,-3.484,3.597,-0.651,-1.872,4.126,2.619,0.207,-1.846,-4.213,7.617,1.013,-2.749,-0.558],  # T
        'V': [13.189,8.095,-3.330,-8.160,-1.080,-2.829,2.151,2.429,2.307,-2.825,-0.230,1.009,-2.219,-3.651,2.332],  # V
        'W': [19.718,-18.512,7.509,4.324,-1.030,10.536,-3.399,4.258,-4.127,-6.507,-1.758,-0.166,1.659,-1.131,-0.097],  # W
        'Y': [9.053,-12.320 ,0.594,8.459,-2.399,-2.093,7.485,-0.068,4.599,4.908,0.256,-3.823,-0.833,-5.162,-1.021],
        # Y
    }


    if not input_data.startswith('>'):
        input_data = ">Converted\n" + input_data  # 将输入转化为FASTA格式

    lines = input_data.split('\n')
    sequence = ''.join(lines[1:])  # 跳过FASTA头部

    encodings = []
    for aa in sequence:
        encodings.append(PCA15v_dict.get(aa, [0] * 15))

    c = []
    d = []
    j = 1
    for e in encodings:
        for f in e:
            c.append(f)
            if j % (6*15) == 0:
                d.append(c)
                c = []
            j += 1
    if c:
        d.append(c)

    return d
#     encodings = []
#     for i in fastas:
#         for aa in i:
#             a = PCA15v[aa]
#             encodings.append(a)
#
#         c = []
#         d = []
#         j = 1
#         for e in encodings:
#             for f in e:
#                 c.append(f)
#                 if j % (6 * 15) == 0:
#                     d.append(c)
#                     c = []
#                 j = j + 1
#     return d
#
#
# def data_read(dir):  # 读取文件
#     data = open(dir)
#     s = data.read()
#     l = s.split()
#     return l
#
#
# def transdata(filename):
#     pos_hex = data_read(filename)
#     PCA15v_pos_hex = PCA15v(pos_hex)
#     PCA15v_pos_hex = np.array(PCA15v_pos_hex)
#
#     print(PCA15v_pos_hex.shape)
#
#     colnum = []
#     sequence = pos_hex
#     for i in range(len(PCA15v_pos_hex)):
#         colnum.append(i)
#
#     pos_PCA15v = pd.DataFrame(PCA15v_pos_hex, index=sequence)
#     pos_PCA15v.index.name = 'sequence'
#
#     tmp = []
#     tmp = filename.split('\\')
#     tmp = tmp[-1].split('.')
#     basepath = os.path.dirname(__file__)
#     generateddirpath = os.path.join(basepath[:len(basepath)], 'generated')
#     if not os.path.exists(generateddirpath):
#         os.makedirs(generateddirpath)
#     xlsxfilename = os.path.join(generateddirpath, tmp[0] + '_PCA15.xlsx')
#     with pd.ExcelWriter(xlsxfilename) as writer:
#         pos_PCA15v.to_excel(writer, sheet_name='sheet_1', header=True, index=True)
#     print(filename + '转换完成\n')
#     print('输出文件：' + xlsxfilename + '\n')
#     return xlsxfilename